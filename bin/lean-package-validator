#!/usr/bin/env php

<?php

$autoloaded = false;
$autoloads = [
    __DIR__ . '/../../../autoload.php',
    __DIR__ . '/../vendor/autoload.php',
    __DIR__ . '/vendor/autoload.php',
];

foreach (\array_filter($autoloads, 'file_exists') as $autoload) {
    require $autoload;
    $autoloaded = true;
    break;
}

if (false === $autoloaded) {
   echo('You need to set up the project dependencies by running the following command:' . PHP_EOL .
       '> composer install' . PHP_EOL);
   exit(1);
}

\define('WORKING_DIRECTORY', \getcwd());
\define('VERSION', '4.1.0');

use Stolt\LeanPackage\Commands\InitCommand;
use Stolt\LeanPackage\Commands\ValidateCommand;
use Stolt\LeanPackage\Analyser;
use Stolt\LeanPackage\Archive;
use Stolt\LeanPackage\Archive\Validator;
use Stolt\LeanPackage\Presets\Finder;
use Stolt\LeanPackage\Presets\PhpPreset;
use Symfony\Component\Console\Application;

$finder = new Finder(new PhpPreset());
$archive = new Archive(WORKING_DIRECTORY);
$analyser = new Analyser($finder);

$initCommand = new InitCommand(
    $analyser
);
$validateCommand = new ValidateCommand(
    $analyser,
    new Validator($archive)
);

$application = new Application('Lean package validator', VERSION);
$application->addCommands(
    [$initCommand, $validateCommand]
);
$application->run();
